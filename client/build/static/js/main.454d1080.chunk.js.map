{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","actions/profile.js","utils/sortings/objsArr.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","href","guestLinks","style","fontSize","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","required","minLength","color","login","alerts","alert","length","map","key","src","spinner","minHeight","minWidth","width","height","position","top","left","alt","DashboardActions","getCurrentProfile","statusText","status","createProfile","history","edit","push","sortByDates","arr","j","i","temp","from","deleteExperience","delete","experience","experiences","exp","_id","company","title","format","description","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Spinner","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","toggleSocialInputs","join","social","addExperience","put","current","toDateDisabled","toggleDisabled","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","objProperty","sortOrder","sort","b","sortObjsArrByProperty","ProfileTop","rel","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","postId","addPost","setText","getPosts","posts","addComment","deleteComment","commentId","comment","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","initialState","getItem","combineReducers","action","filter","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","Landing","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.454d1080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.72063b3b.gif\";","import { v4 as uuid } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\n// Can do it because of 'thunk' middleware\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuid();\r\n  //console.log('id = ', id);\r\n\r\n  // setAlert action going to dispatch the 'SET_ALERT' type\r\n  // to the reducer (reducers/alert.js), so reducer will\r\n  // add alert to the state\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS'; // Get Git Repositories\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\n\r\nexport const ACCOUNT_DELETED = 'DELETE_ACCOUNT';\r\n\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\n\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\n\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\r\n","import axios from 'axios';\r\n\r\nexport const setAuthToken = (token) => {\r\n  if (token) axios.defaults.headers.common['x-auth-token'] = token;\r\n  else delete axios.defaults.headers.common['x-auth-token'];\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\n\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Load User (check if user loaded successfully and only then gives its data)\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) setAuthToken(localStorage.token);\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n\r\n      // payload = user data, as defined by api/auth GET request\r\n      // (Login user API: routes/api/auth.js file)\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n  //const body = { name, email, password };\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    // console.log(res.data);\r\n    // console.log(res.data.token);\r\n\r\n    // 'register' action going to dispatch the 'REGISTER_SUCCESS' type\r\n    // to the reducer (reducers/auth.js)\r\n    // res.data is a {token: tokenValue} obj sended from server\r\n    dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    // Here we get errors array from a server\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      //console.log(errors[0].msg);\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    // 'register' action going to dispatch the 'REGISTER_FAIL' type\r\n    // to the reducer (reducers/auth.js)\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    // Here we get errors array from a server\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      //console.log(errors[0].msg);\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    // 'register' action going to dispatch the 'REGISTER_FAIL' type\r\n    // to the reducer (reducers/auth.js)\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout / Clear Profile\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>People</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user'></i> {''}\r\n          <span className='hide-sm'>My Profile</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={logout} href='#!'>\r\n          <i className='fas fa-sign-out-alt'></i> {''}\r\n          <span className='hide-sm'>Logout</span>\r\n          {/* Logout */}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>People</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code'></i> Menu{' '}\r\n          <span style={{ fontSize: '12px' }}>(must logout)</span>\r\n        </Link>\r\n      </h1>\r\n\r\n      {!loading && (\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  // When user logged in, not allow going to landing page\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>People Connector</h1>\r\n          <p className='lead'>\r\n            Create a profile/portfolio, share posts and connect with other\r\n            people\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapSateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapSateToProps)(Landing);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux'; // Connect Redux to this component\r\nimport { Link, Redirect } from 'react-router-dom'; // Use routes of react-router\r\n\r\n// Can use that actions by this component because by 'connect' method\r\n// we connecting this component to the Redux\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n//import axios from 'axios';\r\n\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== password2) {\r\n      // Calling 'setAlert' action/function in actions/alert.js file\r\n      // so now state.alert.msg = 'Passwords don't match', state.alert.alertType = 'danger'\r\n      // (because setAlert action activates 'alert' reducer by 'dispatch')\r\n      setAlert(\"Passwords don't match\", 'danger');\r\n    } else {\r\n      //console.log(formData);\r\n\r\n      register({ name, email, password });\r\n\r\n      //   const newUser = {\r\n      //     name,\r\n      //     email,\r\n      //     password,\r\n      //   };\r\n      //   try {\r\n      //     const config = {\r\n      //       headers: {\r\n      //         'Content-Type': 'application/json',\r\n      //       },\r\n      //     };\r\n      //     const body = JSON.stringify(newUser);\r\n      //     const res = await axios.post('/api/users', body, config);\r\n      //     console.log(res.data);  // The user token\r\n      //   } catch (err) {\r\n      //     console.error(err.response.data);\r\n      //   }\r\n    }\r\n  };\r\n\r\n  // Redirect if user registered\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Name'\r\n            name='name'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account?{' '}\r\n        <span style={{ color: 'blue' }}>\r\n          <Link to='/login'>Sign In</Link>\r\n        </span>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // 'isAuthenticated' prop contains only isAuthenticated value\r\n  // of state in reducers/auth.js file\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// If we don't need use state in that component, then\r\n// instead mapStateToProps we write null\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux'; // Connect Redux to component\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n//import axios from 'axios';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n    //console.log(formData);\r\n\r\n    //   const logedInUser = {\r\n    //     email,\r\n    //     password,\r\n    //   };\r\n    //   try {\r\n    //     const config = {\r\n    //       headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //       },\r\n    //     };\r\n    //     const body = JSON.stringify(logedInUser);\r\n    //     const res = await axios.post('/api/users', body, config);\r\n    //     console.log(res.data);\r\n    //   } catch (err) {\r\n    //     console.error(err.response.data);\r\n    //   }\r\n  };\r\n\r\n  // Redirect if user logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account?{' '}\r\n        <span style={{ color: 'blue' }}>\r\n          <Link to='/register'>Sign Up</Link>\r\n        </span>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // 'isAuthenticated' prop contains only isAuthenticated value\r\n  // of state in reducers/auth.js file\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // 'alerts' gets 'state.alert' value (state.alert has msg, alertType and id)\r\n  // and it's now become a prop of 'Alert' component\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n//import waitGif from './wait.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        // style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        style={{\r\n          minHeight: '100%',\r\n          minWidth: '100%',\r\n          width: '100%',\r\n          height: 'auto',\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n        }}\r\n        alt='Loading...'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const DashboardActions = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardActions;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n} from './types';\r\n\r\n// Get current user's profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data, // Whole profile data as that route returns\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  // Remove/Clear past fillings in profile fields\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data, // All profiles\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get profile by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    //console.log(`/api/profile/user/${userId}`);\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n    //console.log(res.data);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    //console.log(`Can't get user by id = ${userId}`);\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get Github repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data, // User's Github repos\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Create or update profile (can create separate func to update/editing profile)\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data, // Whole profile data as that route returns\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    //history.push('/dashboard');\r\n\r\n    // If its created (not updated) profile\r\n    if (!edit) {\r\n      // Using 'history' component because we can't use Redirect here\r\n      // (can use Redirect only in component')\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    // Here we get errors array from a server\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      //console.log(errors[0].msg);\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data, // Whole profile data as that route returns\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    // Using 'history' component because we can't use Redirect here\r\n    // (can use Redirect only in component')\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    // Here we get errors array from a server\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      //console.log(errors[0].msg);\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add Education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data, // Whole profile data as that route returns\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    // Using 'history' component because we can't use Redirect here\r\n    // (can use Redirect only in component')\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    // Here we get errors array from a server\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      //console.log(errors[0].msg);\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete education\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete account & profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      'Are you sure you want to delete your account? Can NOT restore the account after it has been deleted!'\r\n    )\r\n  ) {\r\n    try {\r\n      await axios.delete('/api/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been permanently deleted', 'danger'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n\r\n        // err.response.statusText is error message sended by that route\r\n        // err.response.status is HTTP status\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","export const sortObjsArrByProperty = (\r\n  arr,\r\n  objProperty,\r\n  sortOrder = 'ascending'\r\n) => {\r\n  if (sortOrder === 'ascending') {\r\n    arr.sort((a, b) => (a.objProperty < b.objProperty ? -1 : 1));\r\n  } else if (sortOrder === 'descending') {\r\n    // If preveous item smaller then next item, we switch between them\r\n    // (reversed sorting)\r\n    arr.sort((a, b) => (a.objProperty < b.objProperty ? 1 : -1));\r\n    //arr.sort((a, b) => (a.objProperty < b.objProperty || !b.objProperty? 1 : -1));\r\n\r\n    // arr.sort((a, b) => {\r\n    //   return a.objProperty < b.objProperty ? 1 : -1;\r\n    // });\r\n\r\n    // arr.sort((a, b) => {\r\n    //   if (a.objProperty < b.objProperty) return 1;\r\n    //   else return -1;\r\n    // });\r\n  }\r\n};\r\n\r\n// const swap2Items = (item1, item2) => {\r\n//   const temp = item1;\r\n//   item1 = item2;\r\n//   item2 = temp;\r\n// };\r\n\r\n// Descending order\r\nexport const sortByDates = (arr) => {\r\n  for (let j = arr.length - 1; j > 0; j--) {\r\n    for (let i = 0; i < j; i++) {\r\n      if (!arr[i].to && !arr[i + 1].to) {\r\n        if (arr[i].from < arr[i + 1].from) {\r\n          //swap2Items(arr[i], arr[i + 1]);\r\n          const temp = arr[i];\r\n          arr[i] = arr[i + 1];\r\n          arr[i + 1] = temp;\r\n        }\r\n      } else if (arr[i].to && arr[i + 1].to) {\r\n        if (arr[i].to < arr[i + 1].to) {\r\n          //swap2Items(arr[i], arr[i + 1]);\r\n          const temp = arr[i];\r\n          arr[i] = arr[i + 1];\r\n          arr[i + 1] = temp;\r\n        }\r\n      } else if (!arr[i + 1].to) {\r\n        //swap2Items(arr[i], arr[i + 1]);\r\n        const temp = arr[i];\r\n        arr[i] = arr[i + 1];\r\n        arr[i + 1] = temp;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// function bubbleSortConcept2(arr) {\r\n//   let swapped;\r\n\r\n//   do {\r\n//     swapped = false;\r\n//     console.log(arr);\r\n//     arr.forEach((item, index) => {\r\n//       if (item > arr[index + 1]) {\r\n//         // Save the value to a variable so we don't lose it\r\n//         let temp = item;\r\n//         arr[index] = arr[index + 1];\r\n//         arr[index + 1] = temp;\r\n//         swapped = true;\r\n//       }\r\n//     });\r\n//   } while (swapped);\r\n// }\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteExperience } from '../../actions/profile';\r\nimport { sortByDates } from '../../utils/sortings/objsArr';\r\n\r\nconst Experience = ({ experience, deleteExperience }) => {\r\n  sortByDates(experience);\r\n  //console.log(experience);\r\n\r\n  const experiences = experience.map((exp) => (\r\n    <tr key={exp._id}>\r\n      <td>{exp.company}</td>\r\n      <td className='hide-sm'>{exp.title}</td>\r\n      <td>\r\n        <Moment format='DD/MM/YYYY'>{exp.from}</Moment> -{' '}\r\n        {exp.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='DD/MM/YYYY'>{exp.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td className='hide-sm'>{exp.description}</td>\r\n\r\n      <td>\r\n        <button\r\n          onClick={() => deleteExperience(exp._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Experience Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th className='hide-sm'>Title</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th className='hide-sm'>Description</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{experiences}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nExperience.propTypes = {\r\n  experience: PropTypes.array.isRequired,\r\n  deleteExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteExperience })(Experience);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { deleteEducation } from '../../actions/profile';\r\nimport { sortByDates } from '../../utils/sortings/objsArr';\r\n\r\nconst Education = ({ education, deleteEducation }) => {\r\n  sortByDates(education);\r\n\r\n  const educations = education.map((edu) => (\r\n    <tr key={edu._id}>\r\n      <td>{edu.school}</td>\r\n      <td className='hide-sm'>{edu.degree}</td>\r\n      <td>\r\n        <Moment format='DD/MM/YYYY'>{edu.from}</Moment> -{' '}\r\n        {edu.to === null ? (\r\n          'Now'\r\n        ) : (\r\n          <Moment format='DD/MM/YYYY'>{edu.to}</Moment>\r\n        )}\r\n      </td>\r\n      <td className='hide-sm'>{edu.description}</td>\r\n\r\n      <td>\r\n        <button\r\n          onClick={() => deleteEducation(edu._id)}\r\n          className='btn btn-danger'\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className='my-2'>Education Credentials</h2>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Where</th>\r\n            <th className='hide-sm'>Degree</th>\r\n            <th className='hide-sm'>Years</th>\r\n            <th className='hide-sm'>Description</th>\r\n            <th />\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>{educations}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEducation.propTypes = {\r\n  education: PropTypes.array.isRequired,\r\n  deleteEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteEducation })(Education);\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  deleteAccount,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, [getCurrentProfile]);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h2 className='large text-primary'>My Profile</h2>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>\r\n        Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions /> <br />\r\n          <Experience experience={profile.experience} /> <br />\r\n          <Education education={profile.education} />\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Biologist'>Biologist</option>\r\n            <option value='Chemist'>Chemist</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Farmer'>Farmer</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Journalist'>Journalist</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Media Man'>Media Man</option>\r\n            <option value='Medicine Man'>Medicine Man</option>\r\n            <option value='Student'>Student</option>\r\n\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Jerusalem, Israel)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. Programming, Editing)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            {displaySocialInputs ? 'Remove ' : 'Add '}\r\n            Social Network Links\r\n          </button>\r\n          {!displaySocialInputs && <span>Optional</span>}\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' value='Submit' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\n// withRouter - be able to use history obj in component\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n\r\n    // Run that useEffect only when loading === true\r\n    // or when we call to getCurrentProfile Redux action\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // true = editing (not creating a new) profile\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Biologist'>Biologist</option>\r\n            <option value='Chemist'>Chemist</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Farmer'>Farmer</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Journalist'>Journalist</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Media Man'>Media Man</option>\r\n            <option value='Medicine Man'>Medicine Man</option>\r\n            <option value='Student'>Student</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            {displaySocialInputs ? 'Remove ' : 'Add '}\r\n            Social Network Links\r\n          </button>\r\n          {!displaySocialInputs && <span>Optional</span>}\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' value='Submit' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add An Experience</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />\r\n            {''}Current Job\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' value='Submit' />\r\n        <Link className='btn btn-light my-1' to='dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any school, college,\r\n        university or bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School/Bootcamp/University'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='*Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            name='from'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              name='current'\r\n              checked={current}\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />\r\n            {''}Current School\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Educational Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' value='Submit' />\r\n        <Link className='btn btn-light my-1' to='dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills,\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status}\r\n          {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check'></i>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileItem;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport { sortObjsArrByProperty } from '../../utils/sortings/objsArr';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    // Run getProfiles method once only when component loaded\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  sortObjsArrByProperty(profiles, 'user.name');\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large-text-primary'>People</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with people\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map((profile) => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar },\r\n  },\r\n}) => {\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img className='round-img my-1' src={avatar} alt='' />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.linkedin && (\r\n          <a href={social.linkedin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>{' '}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name },\r\n  },\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n      </Fragment>\r\n    )}\r\n\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.sort().map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check'></i>\r\n          {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileAbout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({\r\n  experience: { company, title, location, current, to, from, description },\r\n}) => {\r\n  return (\r\n    <div>\r\n      <h3 className='text-dark'>{company}</h3>\r\n\r\n      <p>\r\n        <Moment format='DD/MM/YYYY'>{from}</Moment> -{' '}\r\n        {!to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>}\r\n      </p>\r\n\r\n      <p>\r\n        <strong>Position:</strong> {title}\r\n      </p>\r\n\r\n      <p>\r\n        <strong>Description:</strong> {description}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileExperience.propTypes = {\r\n  //experience: PropTypes.array.isRequired,\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileExperience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description },\r\n}) => (\r\n  <div>\r\n    <h3 className='text-dark'>{school}</h3>\r\n\r\n    <p>\r\n      <Moment format='DD/MM/YYYY'>{from}</Moment> -{' '}\r\n      {!to ? 'Now' : <Moment format='DD/MM/YYYY'>{to}</Moment>}\r\n    </p>\r\n\r\n    <p>\r\n      <strong>Degree:</strong> {degree}\r\n    </p>\r\n\r\n    <p>\r\n      <strong>Field of study:</strong> {fieldofstudy}\r\n    </p>\r\n\r\n    <p>\r\n      <strong>Description:</strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  //education: PropTypes.array.isRequired,\r\n  education: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileEducation;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [username, getGithubRepos]);\r\n\r\n  //console.log(repos);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repos</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a\r\n                  href={repo.html_url}\r\n                  target='_blank'\r\n                  rel='noopener noreferrer'\r\n                >\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n\r\n              <p>{repo.description}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n\r\n                <li className='badge badge-dark'>\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport { sortByDates } from '../../utils/sortings/objsArr';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    //console.log(match.params.id);\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back To Profiles\r\n          </Link>\r\n\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n\r\n              {sortByDates(profile.experience)}\r\n              {/* {console.log(profile.experience)} */}\r\n\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentialss </h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Ecucation</h2>\r\n              {/* {sortObjsArrByProperty(profile.education, 'to', 'descending')} */}\r\n              {sortByDates(profile.education)}\r\n              {/* {console.log(profile.education)} */}\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentialss</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth, // Only authenticated user can edit its profile\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='DD/MM/YYYY HH:mm'>{date}</Moment>\r\n        </p>\r\n\r\n        {showActions && (\r\n          <Fragment>\r\n            <button\r\n              onClick={(e) => addLike(_id)} // _id is a post id\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-up'></i>{' '}\r\n              <span> {likes.length > 0 && <span>{likes.length}</span>}</span>\r\n            </button>\r\n            <button\r\n              onClick={(e) => removeLike(_id)}\r\n              type='button'\r\n              className='btn btn-light'\r\n            >\r\n              <i className='fas fa-thumbs-down'></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n              Discussion\r\n              {comments.length > 0 && (\r\n                <span className='comment-count'>{comments.length}</span>\r\n              )}\r\n            </Link>\r\n\r\n            {/* user - user who wrote the post, \r\n              auth.user._id - registered user \r\n              (Can see delete button only beside the posts\r\n              of logged in user)*/}\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button\r\n                onClick={(e) => deletePost(_id)}\r\n                type='button'\r\n                className='btn btn-danger'\r\n              >\r\n                <i className='fas fa-times'></i>\r\n              </button>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from './types';\r\n\r\n// Get posts\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/posts');\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add like\r\nexport const addLike = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/like/${postId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Remove like\r\nexport const removeLike = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postId, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete post\r\nexport const deletePost = (postId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/${postId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: postId,\r\n    });\r\n\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add post\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/posts', formData, config);\r\n\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data, // The post\r\n    });\r\n\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get post by its id\r\nexport const getPost = (postId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/posts/${postId}`);\r\n\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data, // The post\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add comment\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/posts/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete comment\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\r\n\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId, // To know which comment to remove\r\n    });\r\n\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n\r\n      // err.response.statusText is error message sended by that route\r\n      // err.response.status is HTTP status\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText(''); // clear the form\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\n// null, because we don't bring to that component any Redux state\r\nexport default connect(null, { addPost })(PostForm);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\nimport { getPosts } from '../../actions/post';\r\n\r\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\r\n  useEffect(() => {\r\n    getPosts();\r\n  }, [getPosts]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Posts</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome to the community posts\r\n      </p>\r\n      <PostForm />\r\n      <div className='posts'>\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPosts.propTypes = {\r\n  getPosts: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPosts })(Posts);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText(''); // clear the form\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Write here your comment'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addComment })(CommentForm);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='DD/MM/YYYY HH:mm'>{date}</Moment>\r\n      </p>\r\n\r\n      {!auth.loading && user === auth.user._id && (\r\n        // _id = comment id\r\n        <button\r\n          onClick={(e) => deleteComment(postId, _id)}\r\n          type='button'\r\n          className='btn btn-danger'\r\n        >\r\n          <i className='fas fa-times'></i>\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from '../post/CommentItem';\r\nimport { getPost } from '../../actions/post';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost, match.params.id]);\r\n\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n\r\n      <h2>Comments</h2>\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n\r\n  //return <div>post</div>;\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle'></i> Page Not Found\r\n      </h1>\r\n      <p className='large'>This page doesn't exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({\r\n  // Component in that case is Dashboard (App.js file)\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      // If user not authenticated, there is\r\n      // redirection to login page\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Register from '../auth/Register';\r\nimport Login from '../auth/Login';\r\nimport Alert from '../layout/Alert';\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport CreateProfile from '../profile-forms/CreateProfile';\r\nimport EditProfile from '../profile-forms/EditProfile';\r\nimport AddExperience from '../profile-forms/AddExperience';\r\nimport AddEducation from '../profile-forms/AddEducation';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Profile from '../profile/Profile';\r\nimport Posts from '../posts/Posts';\r\nimport Post from '../post/Post';\r\nimport NotFound from '../layout/NotFound';\r\nimport PrivateRoute from '../routing/PrivateRoute';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <section className='container'>\r\n      <Alert />\r\n\r\n      <Switch>\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n        <Route exact path='/profiles' component={Profiles} />\r\n        <Route exact path='/profile/:id' component={Profile} />\r\n\r\n        {/* \r\n          We use PrivateRoute to authanticated (loged in) users\r\n          we can decide this way to where reroute loged in users\r\n          here we reroute them to Dashboard component\r\n        */}\r\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\r\n\r\n        <PrivateRoute exact path='/create-profile' component={CreateProfile} />\r\n\r\n        <PrivateRoute exact path='/edit-profile' component={EditProfile} />\r\n\r\n        <PrivateRoute exact path='/add-experience' component={AddExperience} />\r\n\r\n        <PrivateRoute exact path='/add-education' component={AddEducation} />\r\n\r\n        <PrivateRoute exact path='/posts' component={Posts} />\r\n        <PrivateRoute exact path='/posts/:id' component={Post} />\r\n\r\n        {/* Show 'NotFound' component if no of the routes above matching */}\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n\r\n      <Alert />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\n// Reducer is just a function that gets a state and an action\r\nexport default function (state = initialState, action) {\r\n  // 'action' contains type and payload (data)\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      // Must copy the state cause the original state is immutable\r\n      // state gets the payload of an action, in that case\r\n      // payload = { msg, alertType, id } in actions/alert.js file\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      // return only id that not matches to payload (alert to remove)\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  // Token of user we get from a server side\r\n  token: localStorage.getItem('token'),\r\n\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload, // User data\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [], // Github repos\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload, // Whole profile data\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n\r\n        // 'profiles' array now has all the profiles sended by server\r\n        // ('api/profile' GET request)\r\n        profiles: payload,\r\n\r\n        loading: false,\r\n      };\r\n\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n        profile: null, // Add this\r\n      };\r\n\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        // payload is an added post\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        // payload is a post id, so here we remove from 'posts' array\r\n        // only the post with that id\r\n        posts: state.posts.filter((post) => post._id !== payload),\r\n        loading: false,\r\n      };\r\n\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        // payload is the all comments\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n\r\n          // Leave all comments except for the comment\r\n          // user click to delete\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This is a root reducer\r\n\r\nimport { combineReducers } from 'redux';\r\nimport alert from './alert'; // Bring 'alert' reducer\r\nimport auth from './auth'; // Bring 'auth' reducer\r\nimport profile from './profile'; // Bring 'profile' reducer\r\nimport post from './post'; // Bring 'post' reducer\r\n\r\n// combineReducers contains obj of all reducers in the app\r\nexport default combineReducers({ alert, auth, profile, post });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport { setAuthToken } from './utils/setAuthToken';\n\nimport './App.css';\n\n// Check first time if user loaded\nif (localStorage.token) setAuthToken(localStorage.token);\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n\n    // Empty array to run just once\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}